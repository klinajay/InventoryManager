// <auto-generated />
using InventoryManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250106140425_AddDataSeed")]
    partial class AddDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManager.Models.Domain.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "P001",
                            ImageUrl = "Images\\Apple.jfif",
                            ProductCategoryId = "C001",
                            ProductName = "Apple",
                            ProductPrice = 2.5,
                            ProductQuantity = 0,
                            SupplierId = "S001"
                        },
                        new
                        {
                            ProductId = "P002",
                            ProductCategoryId = "C001",
                            ProductName = "Banana",
                            ProductPrice = 1.8,
                            ProductQuantity = 0,
                            SupplierId = "S002"
                        },
                        new
                        {
                            ProductId = "P003",
                            ProductCategoryId = "C002",
                            ProductName = "Carrot",
                            ProductPrice = 0.5,
                            ProductQuantity = 0,
                            SupplierId = "S003"
                        },
                        new
                        {
                            ProductId = "P004",
                            ProductCategoryId = "C002",
                            ProductName = "Broccoli",
                            ProductPrice = 1.2,
                            ProductQuantity = 0,
                            SupplierId = "S004"
                        },
                        new
                        {
                            ProductId = "P005",
                            ProductCategoryId = "C003",
                            ProductName = "Milk",
                            ProductPrice = 1.0,
                            ProductQuantity = 0,
                            SupplierId = "S005"
                        },
                        new
                        {
                            ProductId = "P006",
                            ImageUrl = "Images\\Cheese1.jfif",
                            ProductCategoryId = "C003",
                            ProductName = "Cheese",
                            ProductPrice = 3.0,
                            ProductQuantity = 0,
                            SupplierId = "S006"
                        },
                        new
                        {
                            ProductId = "P007",
                            ProductCategoryId = "C004",
                            ProductName = "Soda",
                            ProductPrice = 1.5,
                            ProductQuantity = 0,
                            SupplierId = "S007"
                        },
                        new
                        {
                            ProductId = "P008",
                            ProductCategoryId = "C004",
                            ProductName = "Orange Juice",
                            ProductPrice = 2.0,
                            ProductQuantity = 0,
                            SupplierId = "S008"
                        },
                        new
                        {
                            ProductId = "P009",
                            ProductCategoryId = "C005",
                            ProductName = "Chips",
                            ProductPrice = 1.0,
                            ProductQuantity = 0,
                            SupplierId = "S009"
                        },
                        new
                        {
                            ProductId = "P010",
                            ProductCategoryId = "C005",
                            ProductName = "Chocolate",
                            ProductPrice = 1.8,
                            ProductQuantity = 0,
                            SupplierId = "S010"
                        });
                });

            modelBuilder.Entity("InventoryManager.Models.Domain.ProductCategory", b =>
                {
                    b.Property<string>("ProductCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = "C001",
                            CategoryName = "Fruit",
                            Description = "Fresh fruits"
                        },
                        new
                        {
                            ProductCategoryId = "C002",
                            CategoryName = "Vegetables",
                            Description = "Fresh vegetables"
                        },
                        new
                        {
                            ProductCategoryId = "C003",
                            CategoryName = "Dairy",
                            Description = "Dairy products"
                        },
                        new
                        {
                            ProductCategoryId = "C004",
                            CategoryName = "Beverages",
                            Description = "Drinks and beverages"
                        },
                        new
                        {
                            ProductCategoryId = "C005",
                            CategoryName = "Snacks",
                            Description = "Packaged snacks"
                        });
                });

            modelBuilder.Entity("InventoryManager.Models.Domain.Supplier", b =>
                {
                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            SupplierId = "S001",
                            SupplierAddress = "Pimpri-Chinchwad",
                            SupplierContact = "1234567890",
                            SupplierName = "Rajesh Yadav"
                        },
                        new
                        {
                            SupplierId = "S002",
                            SupplierAddress = "Baner, Pune",
                            SupplierContact = "9876543210",
                            SupplierName = "Suresh Gupta"
                        },
                        new
                        {
                            SupplierId = "S003",
                            SupplierAddress = "Hinjewadi, Pune",
                            SupplierContact = "9123456789",
                            SupplierName = "Meera Sharma"
                        },
                        new
                        {
                            SupplierId = "S004",
                            SupplierAddress = "Kothrud, Pune",
                            SupplierContact = "9988776655",
                            SupplierName = "Anil Kumar"
                        },
                        new
                        {
                            SupplierId = "S005",
                            SupplierAddress = "Viman Nagar, Pune",
                            SupplierContact = "9876123450",
                            SupplierName = "Sunita Verma"
                        },
                        new
                        {
                            SupplierId = "S006",
                            SupplierAddress = "Wakad, Pune",
                            SupplierContact = "9765432198",
                            SupplierName = "Prakash Patel"
                        },
                        new
                        {
                            SupplierId = "S007",
                            SupplierAddress = "Aundh, Pune",
                            SupplierContact = "8888999944",
                            SupplierName = "Arjun Desai"
                        },
                        new
                        {
                            SupplierId = "S008",
                            SupplierAddress = "Hadapsar, Pune",
                            SupplierContact = "9988001122",
                            SupplierName = "Kavita Joshi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
